from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from callbacks.admin import AdminCallback


def get_admin_menu_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=AdminCallback(action="view_stats"))
    builder.button(text="üìã –ü—Ä–æ–º–ø—Ç—ã", callback_data=AdminCallback(action="view_prompts"))
    builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–ø—Ç", callback_data=AdminCallback(action="add_prompt"))
    builder.button(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", callback_data=AdminCallback(action="manage_users"))  # YANGI
    builder.adjust(2, 2)
    return builder.as_markup()


def get_user_management_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="üìä –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç", callback_data=AdminCallback(action="set_limit"))
    builder.button(text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", callback_data=AdminCallback(action="reset_usage"))
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=AdminCallback(action="back"))
    builder.adjust(2, 1)
    return builder.as_markup()

def get_back_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=AdminCallback(action="back"))
    return builder.as_markup()


def get_stats_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data=AdminCallback(action="view_stats"))
    builder.button(text="üèÜ –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data=AdminCallback(action="top_users"))
    builder.button(text="üìπ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–Ω–∞–ª–∏–∑—ã", callback_data=AdminCallback(action="recent_videos"))
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=AdminCallback(action="back"))
    builder.adjust(2, 2)
    return builder.as_markup()


def get_prompt_category_keyboard(add_mode: bool = False):
    builder = InlineKeyboardBuilder()
    action_prefix = "add_select_category" if add_mode else "select_category"
    builder.button(text="–ú–æ—ë –≤–∏–¥–µ–æ", callback_data=AdminCallback(action=action_prefix, category="my"))
    builder.button(text="–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç", callback_data=AdminCallback(action=action_prefix, category="competitor"))
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=AdminCallback(action="back"))
    builder.adjust(2, 1)
    return builder.as_markup()


def get_prompt_type_keyboard(add_mode: bool = False):
    builder = InlineKeyboardBuilder()
    action_prefix = "add_select_type" if add_mode else "select_type"
    builder.button(text="‚õèÔ∏è –ü—Ä–æ—Å—Ç–æ–π", callback_data=AdminCallback(action=action_prefix, analysis_type="simple"))
    builder.button(text="‚öôÔ∏è –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π", callback_data=AdminCallback(action=action_prefix, analysis_type="advanced"))
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=AdminCallback(action="back"))
    builder.adjust(2, 1)
    return builder.as_markup()


def get_advanced_subtype_keyboard(category: str = "my", add_mode: bool = False):
    builder = InlineKeyboardBuilder()
    action_prefix = "add_select_subtype" if add_mode else "select_subtype"
    builder.button(text="üìù –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –ø—Ä–æ–º–ø—Ç—ã", callback_data=AdminCallback(action=action_prefix, subtype="advanced", category=category))
    builder.button(text="üîÑ –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∏–Ω—Ç–µ–∑", callback_data=AdminCallback(action=action_prefix, subtype="synthesis", category=category))
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=AdminCallback(action="back"))
    builder.adjust(2, 1)
    return builder.as_markup()


def get_prompts_keyboard(prompts, analysis_type: str, category: str):
    builder = InlineKeyboardBuilder()
    
    for prompt in prompts:
        builder.button(
            text=f"‚úèÔ∏è {prompt.name[:30]}", 
            callback_data=AdminCallback(action="update_prompt", prompt_id=prompt.id)
        )
        builder.button(
            text="‚ùå", 
            callback_data=AdminCallback(action="delete_prompt", prompt_id=prompt.id)
        )
    
    builder.adjust(2)
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=AdminCallback(action="back").pack()))
    
    return builder.as_markup()